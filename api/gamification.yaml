swagger: '2.0'
info:
  version: '1.0.0'
  title: AMT Gamification API
  description: An API for gamifying any web application suitable to gamification concepts
  termsOfService: https://github.com/antonyciani/AMT_GamificationProject
  contact:
    name: ALBASINI Romain, CIANI Antony, HERNANDEZ Thomas, SELIMI Dardan
    email: antony.ciani@heig-vd.ch
    url: https://github.com/antonyciani/AMT_GamificationProject
  license:
    name: MIT
    url: https://github.com/antonyciani/AMT_GamificationProject
host: localhost
basePath: /
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /badges:
    get:
      description: Returns all badges from the system that the user has access to
      operationId: findBadges
      produces:
        - application/json
        - application/xml
        - text/xml
        - text/html
      responses:
        '200':
          description: badges response
          schema:
            type: array
            items:
              $ref: '#/definitions/badge'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    post:
      description: Creates a new badge in the system.  Duplicates are allowed
      operationId: addBadge
      produces:
        - application/json
      parameters:
        - name: pet
          in: body
          description: Badge to add to the system
          required: true
          schema:
            $ref: '#/definitions/newBadge'
      responses:
        '200':
          description: badge response
          schema:
            $ref: '#/definitions/badge'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /badges/{id}:
    get:
      description: Returns a badge based on a single ID
      operationId: findBadgeById
      produces:
        - application/json
        - application/xml
        - text/xml
        - text/html
      parameters:
        - name: id
          in: path
          description: ID of the badge to fetch
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: badge response
          schema:
            $ref: '#/definitions/badge'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    delete:
      description: deletes a single pet based on the ID supplied
      operationId: deleteBadge
      parameters:
        - name: id
          in: path
          description: ID of badge to delete
          required: true
          type: integer
          format: int64
      responses:
        '204':
          description: badge deleted
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
            
  /pointscales:
    get:
      description: Returns all badges from the system that the user has access to
      operationId: findPointScales
      produces:
        - application/json
        - application/xml
        - text/xml
        - text/html
      responses:
        '200':
          description: pointscales response
          schema:
            type: array
            items:
              $ref: '#/definitions/pointScale'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    post:
      description: Creates a new pointScale in the system.  Duplicates are allowed
      operationId: addPointScale
      produces:
        - application/json
      parameters:
        - name: pointScale
          in: body
          description: PointScale to add to the system
          required: true
          schema:
            $ref: '#/definitions/newPointScale'
      responses:
        '200':
          description: pointScale response
          schema:
            $ref: '#/definitions/pointScale'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /pointscales/{id}:
    get:
      description: Returns the details of the badge based on a single ID
      operationId: findPointScaleById
      produces:
        - application/json
        - application/xml
        - text/xml
        - text/html
      parameters:
        - name: id
          in: path
          description: ID of pointScale to fetch
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: pointScale response
          schema:
            $ref: '#/definitions/pointScale'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    delete:
      description: deletes a single pointScale based on the ID supplied
      operationId: deletePointScale
      parameters:
        - name: id
          in: path
          description: ID of pointScale to delete
          required: true
          type: integer
          format: int64
      responses:
        '204':
          description: pointScale deleted
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'

definitions:
  badge:
    type: object
    required:
      - id
      - name
      - description
      - imageURI
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      description:
        type: string
      imageURI:
        type: string
  newBadge:
    type: object
    required:
      - name
      - description
      - imageURI
    properties:
      name:
        type: string
      description:
        type: string
      imageURI:
        type: string
  pointScale:
    type: object
    required:
      - id
      - name
      - description
      - lowerBound
      - upperBound
      - isIntegerScale
      - unit
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      description:
        type: string
      lowerBound:
        type: number
        format: double
      upperBound:
        type: number
        format: double
      isIntegerScale:
        type: boolean
      unit:
        type: string
  newPointScale:
    type: object
    required:
      - name
      - description
      - lowerBound
      - upperBound
      - isIntegerScale
      - unit
    properties:
      name:
        type: string
      description:
        type: string
      lowerBound:
        type: number
        format: double
      upperBound:
        type: number
        format: double
      isIntegerScale:
        type: boolean
      unit:
        type: string
  
  
  errorModel:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
